services:
  users:
    container_name: users
    build:
      context: ./users
    command: make docker-setup start
    ports:
      - '$USERS_PORT:$USERS_PORT'
    environment:
      PORT: $USERS_PORT
      DB_USER: $DB_USER
      DB_PASSWORD: $DB_PASSWORD
      DB_NAME: $DB_USERS_NAME
      DB_HOST: db
      DB_PORT: $DB_PORT
      SECRET_KEY: $SECRET_KEY
      SECRET_PKEY: $SECRET_PKEY
    restart: on-failure
    depends_on:
      - db
      - kafka

  notes:
    container_name: notes
    build:
      context: ./notes
    command: make docker-setup start
    ports:
      - '$NOTES_PORT:$NOTES_PORT'
    environment:
      PORT: $NOTES_PORT
      DB_USER: $DB_USER
      DB_PASSWORD: $DB_PASSWORD
      DB_NAME: $DB_NOTES_NAME
      DB_HOST: db
      DB_PORT: $DB_PORT
      SECRET_KEY: $SECRET_KEY
    restart: on-failure
    depends_on:
      - db
      - kafka

  mail:
    container_name: mail
    build:
      context: ./mail
    ports:
      - '$MAIL_PORT:$MAIL_PORT'
    environment:
      PORT: $MAIL_PORT
    restart: on-failure
    depends_on:
      - kafka

  db:
    container_name: db
    image: postgres:latest
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: $DB_USER
      POSTGRES_PASSWORD: $DB_PASSWORD
    volumes:
      - pgdata:/var/lib/postgresql/data

  zookeeper:
    container_name: zookeper
    image: wurstmeister/zookeeper
    ports:
      - '2181:2181'

  kafka:
    container_name: kafka
    image: wurstmeister/kafka
    ports:
      - '9092:9092'
    links:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

volumes:
  pgdata:
